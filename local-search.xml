<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>node.js 部署脚本</title>
    <link href="/2023/09/26/micro-deploy/"/>
    <url>/2023/09/26/micro-deploy/</url>
    
    <content type="html"><![CDATA[<h1 id="node-js-自动打包-部署脚本"><a href="#node-js-自动打包-部署脚本" class="headerlink" title="node.js 自动打包&amp;&amp;部署脚本"></a>node.js 自动打包&amp;&amp;部署脚本</h1><h2 id="搭建项目"><a href="#搭建项目" class="headerlink" title="搭建项目"></a>搭建项目</h2><blockquote><p>采用 ES module 用法，package.json type 需要设置为 module </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm init<br></code></pre></td></tr></table></figure><h2 id="添加配置文件server-json"><a href="#添加配置文件server-json" class="headerlink" title="添加配置文件server.json"></a>添加配置文件server.json</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;host&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;****&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;username&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;****&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;*****&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;****&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">22</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;localDir&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;release/&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;backUp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>  <span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><h2 id="读取配置文件"><a href="#读取配置文件" class="headerlink" title="读取配置文件"></a>读取配置文件</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> fs <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;fs&quot;</span>;<br><span class="hljs-keyword">const</span> configFilePath = path.<span class="hljs-title function_">resolve</span>(process.<span class="hljs-title function_">cwd</span>(), <span class="hljs-string">&quot;server.json&quot;</span>);<br><span class="hljs-keyword">const</span> config = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(fs.<span class="hljs-title function_">readFileSync</span>(configFilePath));<br></code></pre></td></tr></table></figure><h2 id="链接服务器"><a href="#链接服务器" class="headerlink" title="链接服务器"></a>链接服务器</h2><p>安装 node-ssh 依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i node-ssh -D<br>npm i ora -D <br>npm i chalk -D<br></code></pre></td></tr></table></figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> chalk <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;chalk&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Ora</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;ora&quot;</span>;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">connectServer</span>(<span class="hljs-params">config</span>) &#123;<br>  <span class="hljs-keyword">let</span> spinner = <span class="hljs-title class_">Ora</span>(chalk.<span class="hljs-title function_">cyan</span>(<span class="hljs-string">`[info] connecting server....\n`</span>)).<span class="hljs-title function_">start</span>();<br>  <span class="hljs-keyword">const</span> sshLoginParam = &#123;<br>    <span class="hljs-attr">host</span>: config.<span class="hljs-property">host</span>,<br>    <span class="hljs-attr">port</span>: config.<span class="hljs-property">port</span>,<br>    <span class="hljs-attr">username</span>: config.<span class="hljs-property">username</span>,<br>    <span class="hljs-attr">password</span>: config.<span class="hljs-property">password</span>,<br>  &#125;;<br><span class="hljs-comment">//   链接</span><br>  <span class="hljs-keyword">await</span> <span class="hljs-variable constant_">SSH</span>.<span class="hljs-title function_">connect</span>(sshLoginParam)<br>    .<span class="hljs-title function_">then</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      spinner.<span class="hljs-title function_">succeed</span>(chalk.<span class="hljs-title function_">green</span>(<span class="hljs-string">`[info] connected server \n`</span>));<br>    &#125;)<br>    .<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      spinner.<span class="hljs-title function_">fail</span>(chalk.<span class="hljs-title function_">red</span>(<span class="hljs-string">`[error] connect server failed\n`</span>));<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>      process.<span class="hljs-title function_">exit</span>(<span class="hljs-number">1</span>);<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="添加执行命令方法"><a href="#添加执行命令方法" class="headerlink" title="添加执行命令方法"></a>添加执行命令方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// cmd 需要执行的命令</span><br><span class="hljs-comment">// cwd 执行命令所在的目录</span><br><span class="hljs-comment">// await runCommand(`rm -rf test-dir`, &#x27;/home&#x27;)</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">runCommand</span>(<span class="hljs-params">cmd, cwd</span>) &#123;<br>  <span class="hljs-keyword">await</span> <span class="hljs-variable constant_">SSH</span>.<span class="hljs-title function_">execCommand</span>(cmd, &#123;<br>    cwd,<br>    <span class="hljs-comment">// onStderr(chunk) &#123;</span><br>    <span class="hljs-comment">//   logError(`$&#123;cmd&#125;, stderrChunk, $&#123;chunk.toString(&quot;utf8&quot;)&#125;`);</span><br>    <span class="hljs-comment">// &#125;,</span><br>  &#125;);<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="执行推送文件到远程"><a href="#执行推送文件到远程" class="headerlink" title="执行推送文件到远程"></a>执行推送文件到远程</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// localDir 本地文件目录</span><br><span class="hljs-comment">// remoteDir 远程文件目录</span><br><span class="hljs-keyword">await</span> <span class="hljs-variable constant_">SSH</span>.<span class="hljs-title function_">putDirectory</span>(localDir, remoteDir);<br></code></pre></td></tr></table></figure><h2 id="child-process-开启子shell执行命令"><a href="#child-process-开启子shell执行命令" class="headerlink" title="child_process 开启子shell执行命令"></a>child_process 开启子shell执行命令</h2><!-- @example spawnCommand('yarn', ['build'], process.cwd()) --><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> <span class="hljs-title function_">spawnCommand</span> = (<span class="hljs-params">command, params, cwd</span>) =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> result = <span class="hljs-title function_">spawn</span>(command, params, &#123;<br>      cwd,<br>      <span class="hljs-attr">stdio</span>: <span class="hljs-string">&#x27;inherit&#x27;</span>, <span class="hljs-comment">// 打印命令原始输出</span><br>      <span class="hljs-attr">shell</span>: process.<span class="hljs-property">platform</span> === <span class="hljs-string">&#x27;win32&#x27;</span>, <span class="hljs-comment">// 兼容windows系统</span><br>    &#125;);<br><br>    result.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>      <span class="hljs-title function_">reject</span>(err);<br>    &#125;);<br><br>    result.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">code</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">if</span> (code === <span class="hljs-number">0</span>) <span class="hljs-title function_">resolve</span>();<br>      <span class="hljs-keyword">else</span> <span class="hljs-title function_">reject</span>(code);<br>    &#125;);<br>  &#125;);<br>&#125;;<br><br></code></pre></td></tr></table></figure><h1 id="完整示例"><a href="#完整示例" class="headerlink" title="完整示例"></a>完整示例</h1><pre><code class="js">import Ora from &quot;ora&quot;;import * as NodeSSH from &quot;node-ssh&quot;;import fs from &quot;fs&quot;;import * as path from &quot;path&quot;;import chalk from &quot;chalk&quot;;import  &#123; spawn &#125; from &#39;child_process&#39;;// 根目录const REMOTE_ROOT = &quot;/home/simtek-cloud/front/all/html&quot;;// 主APP目录const MAIN_APP = `main-app`;const SSH = new NodeSSH.NodeSSH();const logInfo = (text) =&gt; console.log(chalk.cyan(text));const logSuccess = (text) =&gt; console.log(chalk.green(text));const logError = (text) =&gt; console.log(chalk.red(text));/** * spawnCommand 执行shell命令 * @param &#123;*&#125; command 命令 string * @param &#123;*&#125; params 参数 array * @param &#123;*&#125; cwd 工作路径 * @example spawnCommand(&#39;yarn&#39;, [&#39;build&#39;], process.cwd()) */const spawnCommand = (command, params, cwd) =&gt; &#123;  return new Promise((resolve, reject) =&gt; &#123;    const result = spawn(command, params, &#123;      cwd,      stdio: &#39;inherit&#39;, // 打印命令原始输出      shell: process.platform === &#39;win32&#39;, // 兼容windows系统    &#125;);    result.on(&#39;error&#39;, (err) =&gt; &#123;      reject(err);    &#125;);    result.on(&#39;close&#39;, (code) =&gt; &#123;      if (code === 0) resolve();      else reject(code);    &#125;);  &#125;);&#125;;async function runCommand(cmd, cwd) &#123;  await SSH.execCommand(cmd, &#123;    cwd,    onStderr(chunk) &#123;      logError(`$&#123;cmd&#125;, stderrChunk, $&#123;chunk.toString(&quot;utf8&quot;)&#125;`);    &#125;,  &#125;);&#125;const configFilePath = path.resolve(process.cwd(), &quot;server.json&quot;);const config = JSON.parse(fs.readFileSync(configFilePath));async function connectServer(config) &#123;  let spinner = Ora(chalk.cyan(`[info] connecting server....\n`)).start();  const sshLoginParam = &#123;    host: config.host,    port: config.port,    username: config.username,    password: config.password,  &#125;;  await SSH.connect(sshLoginParam)    .then(() =&gt; &#123;      spinner.succeed(chalk.green(`[info] connected server \n`));    &#125;)    .catch((err) =&gt; &#123;      spinner.fail(chalk.red(`[error] connect server failed\n`));      console.log(err);      process.exit(1);    &#125;);&#125;async function deleteMainAppDir() &#123;  const spinner = Ora(    chalk.cyan(`[info] delete remote dir: main-app\n`)  ).start();  // 删除源目录  await runCommand(`rm -rf $&#123;MAIN_APP&#125;`, config.path).catch((err) =&gt; &#123;    spinner.fail(chalk.red(&quot;删除文件失败了&quot;));    console.log(&quot;[error]chmod: &quot;, err);  &#125;);  spinner.succeed(chalk.green(`[info] remote dir [main-app] is deleted`));&#125;/** * @description: 推送推送main app * @return &#123;*&#125; */async function putMainAppDir() &#123;  const localDir = path.resolve(process.cwd(), `main-app/dist`);  const remoteDir = `$&#123;config.path&#125;/$&#123;MAIN_APP&#125;`;  const successText = `[info] push $&#123;localDir&#125; to $&#123;remoteDir&#125;\n`;  const spinner = Ora(chalk.cyan(successText)).start();  try &#123;    await SSH.putDirectory(localDir, remoteDir);    spinner.succeed(chalk.green(successText));  &#125; catch (e) &#123;    spinner.fail(chalk.red(successText));  &#125;&#125;/** * @description: 重启docker 容器 * @return &#123;*&#125; */async function restartDocker() &#123;  const spinner = Ora(chalk.cyan(`[info] restart docker\n`)).start();  // 重启docker 容器  try &#123;    await runCommand(`docker restart all`, config.path).catch((err) =&gt; &#123;      console.log(&quot;[error]unzip: &quot;, err);    &#125;);    spinner.succeed(chalk.green(`[error] restart docker\n`));  &#125; catch (e) &#123;    spinner.fail(chalk.red(`[error] restart docker\n`));  &#125;&#125;async function deploy() &#123;  console.log(`======= 加载配置文件 ==========`);  console.log(config);  await spawnCommand(&#39;npm run&#39;, [&#39;build:all&#39;], process.cwd())  await connectServer(config);  // 删除目录  await deleteMainAppDir();  // 上传文件到指定目录  await putMainAppDir();  // 重启docker  await restartDocker();  SSH.dispose();&#125;deploy();</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>svg 动画</title>
    <link href="/2023/09/10/svg-animate/"/>
    <url>/2023/09/10/svg-animate/</url>
    
    <content type="html"><![CDATA[<h1 id="svg-动画"><a href="#svg-动画" class="headerlink" title="svg 动画"></a>svg 动画</h1><p><a href="https://css-tricks.com/guide-svg-animations-smil/">动画参考资料链接链接</a> <a href="https://css-tricks.com/guide-svg-animations-smil/">https://css-tricks.com/guide-svg-animations-smil/</a></p><h2 id="SVG-dasharray"><a href="#SVG-dasharray" class="headerlink" title="SVG dasharray"></a>SVG dasharray</h2><p>stroke-dasharray 属性可以设置线段绘制时的间隔<br>stroke-dasharray 数值型值 可以配置2个，第二个值缺省</p><ul><li>stroke-dasharray&#x3D;”4” 代表dash 值和offset间距保持一直</li><li>stroke-dasharray&#x3D;”4 5”  dash宽度为4，每一块间距为5</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">baseProfile</span>=<span class="hljs-string">&quot;full&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 200, L200, 200, L400, 200&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 250, L200, 250, L400, 250&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-dasharray</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h2 id="stroke-dashoffset"><a href="#stroke-dashoffset" class="headerlink" title="stroke-dashoffset"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset">stroke-dashoffset</a></h2><p>stroke-dashoffset 指定了 dash 模式到路径开始的距离</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">baseProfile</span>=<span class="hljs-string">&quot;full&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 200, L200, 200, L400, 200&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 250, L200, 250, L400, 250&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-dasharray</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 250, L200, 250, L400, 250&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-dasharray</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-dashoffset</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br>## 结合dasharray 与 stroke-dashoffset 让路径动起来<br>```html<br><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">baseProfile</span>=<span class="hljs-string">&quot;full&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span></span><br><span class="hljs-tag">     <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/2000/svg&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 200, L200, 200, L400, 200&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 250, L200, 250, L400, 250&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-dasharray</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>    <br>    <span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">&quot;M0, 250, L200, 250, L400, 250&quot;</span> <span class="hljs-attr">stroke</span>=<span class="hljs-string">&quot;green&quot;</span> <span class="hljs-attr">stroke-dasharray</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-dashoffset</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">stroke-width</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">animate</span> <span class="hljs-attr">attributeName</span>=<span class="hljs-string">&quot;stroke-dashoffset&quot;</span> <span class="hljs-attr">from</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;-20&quot;</span> <span class="hljs-attr">dur</span>=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">&quot;freeze&quot;</span> <span class="hljs-attr">repeatCount</span>=<span class="hljs-string">&quot;indefinite&quot;</span> <span class="hljs-attr">easing</span>=<span class="hljs-string">&quot;linear&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">animate</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="/img/svg/svg-1.gif"></p><h2 id="模拟管道水流动动画"><a href="#模拟管道水流动动画" class="headerlink" title="模拟管道水流动动画"></a>模拟管道水流动动画</h2><p>该动画需要通过 SVGGeometryElement的 getTotalLength 获取全部路径，通过动画设置stroke-dashoffset偏移</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>   &lt;svg version=&quot;1.1&quot;<br>     baseProfile=&quot;full&quot;<br>     width=&quot;100%&quot; height=&quot;100%&quot;<br>     xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;<br>     &lt;path<br>        ref=&quot;pathEl2&quot;<br>        fill=&quot;none&quot;<br>        :stroke-dasharray=&quot;dashArray&quot;<br>        stroke=&quot;red&quot;<br>        stroke-width=&quot;6&quot;<br>            d=&quot;M 10,30<br>            A 20,20 0,0,1 50,30<br>            A 20,20 0,0,1 90,30<br>            Q 90,60 50,90<br>            Q 10,60 10,30 z&quot; &gt;<br>            &lt;!-- &lt;animate<br>                attributeName=&quot;dash&quot;<br>                values=&quot;0;5;0&quot;<br>                dur=&quot;10s&quot;<br>                repeatCount=&quot;indefinite&quot; /&gt; --&gt;<br>            &lt;/path&gt;<br><br>     &lt;path<br>        ref=&quot;pathEl&quot;<br>        fill=&quot;none&quot;<br>        :stroke-dasharray=&quot;dashArray&quot;<br>        :stroke-dashoffset=&quot;strokeDashoffset&quot;<br>        stroke-width=&quot;6&quot;<br>        stroke=&quot;green&quot;<br>            d=&quot;M 10,30<br>            A 20,20 0,0,1 50,30<br>            A 20,20 0,0,1 90,30<br>            Q 90,60 50,90<br>            Q 10,60 10,30 z&quot; &gt;<br>            &lt;animate<br>                attributeName=&quot;stroke-dashoffset&quot;<br>                from=&quot;275&quot;<br>                to=&quot;0&quot;<br>                dur=&quot;4s&quot;<br>                repeatCount=&quot;indefinite&quot; /&gt;<br>            &lt;/path&gt; <br>&lt;/svg&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; onMounted, ref &#125; from &#x27;vue&#x27;;<br><br>const pathEl = ref&lt;SVGGeometryElement&gt;()<br><br>const dashArray = ref(275)<br>const strokeDashoffset = ref(-275)<br><br>onMounted(() =&gt; &#123;<br>    const totalLength = pathEl.value?.getTotalLength()<br>    console.log(totalLength)<br><br>&#125;)<br><br>&lt;/script&gt;<br><br>&lt;style scoped&gt;<br><br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure><p>运行效果预览<br><img src="/img/svg/svg-path-wather.gif"></p><p>其他<br>TODO</p>]]></content>
    
    
    
    <tags>
      
      <tag>svg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>inkscape</title>
    <link href="/2023/09/08/inkscape/"/>
    <url>/2023/09/08/inkscape/</url>
    
    <content type="html"><![CDATA[<h1 id="Inkscape-SVG-自由绘图工具"><a href="#Inkscape-SVG-自由绘图工具" class="headerlink" title="Inkscape SVG 自由绘图工具"></a><a href="https://inkscape.org/zh-hans/doc/tutorials/basic/tutorial-basic.html">Inkscape</a> SVG 自由绘图工具</h1><h2 id="设置文档属性"><a href="#设置文档属性" class="headerlink" title="设置文档属性"></a>设置文档属性</h2><p><img src="/img/inkscape/file-property.png"></p><h2 id="单位设置"><a href="#单位设置" class="headerlink" title="单位设置"></a>单位设置</h2><p><img src="/img/inkscape/file-property.png"></p><ol><li>单位按需设置，可选px, mm 等</li><li>画布大小按需设置宽高</li><li>设置尺寸比例，此处会影响导出未svg 时的大小，建议默认设置为1</li></ol><h2 id="xml-快速编辑"><a href="#xml-快速编辑" class="headerlink" title="xml 快速编辑"></a>xml 快速编辑</h2><p><img src="/img/inkscape/xml-editor.png"></p><ul><li>通过右侧配置蓝可以快速获取页面上节点属性信息&amp;&amp; 编辑</li></ul><h2 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h2><p><img src="/img/inkscape/file-export.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>svg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>micro-app 搭建记录</title>
    <link href="/2023/09/06/micro-app/"/>
    <url>/2023/09/06/micro-app/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建平台基座"><a href="#搭建平台基座" class="headerlink" title="搭建平台基座"></a>搭建平台基座</h1><blockquote><p>基座与平台无关，技术栈 vite + vue3 + element-plus<br><a href="https://zeroing.jd.com/micro-app/docs.html#/">micro-app v0.8.1</a><br><a href="https://micro-zoe.com/docs/1.x/#/zh-cn/start">micro-app 1.0.0-beta 版本</a></p></blockquote><h2 id="通过vite-脚手架搭建项目"><a href="#通过vite-脚手架搭建项目" class="headerlink" title="通过vite 脚手架搭建项目"></a>通过vite 脚手架搭建项目</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># npm 7+, extra double-dash is needed:</span><br>npm create vite@latest my-vue-app -- --template vue-ts<br><br></code></pre></td></tr></table></figure><ul><li><p>安装 micro-app </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i @micro-zoe/micro-app --save<br></code></pre></td></tr></table></figure></li><li><p>入口文件添加 <strong>micro-app</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs typescript"> <span class="hljs-keyword">import</span> microApp <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@micro-zoe/micro-app&#x27;</span>;<br> microApp.<span class="hljs-title function_">start</span>(&#123;<br>    <span class="hljs-attr">destroy</span>: <span class="hljs-literal">true</span><br> &#125;)<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>()<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#root&#x27;</span>)<br><br></code></pre></td></tr></table></figure></li></ul><h2 id="安装element-plus"><a href="#安装element-plus" class="headerlink" title="安装element-plus"></a>安装element-plus</h2><p>| 由于 micro-app 基座应用的样式类无法被隔离，建议修改elment-plus样式类的命名空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i element-plus<br></code></pre></td></tr></table></figure><p>修改 element-plus 命名空间<br>element plus 当前可以全局导入，如果需要按需导入修改命名空间 可参考官网</p><p><strong>设置 ElConfigProvider</strong><br>使用 ElConfigProvider 包装您的根组件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- App.vue --&gt;<br>&lt;template&gt;<br>  &lt;el-config-provider namespace=&quot;sk&quot;&gt;<br>    &lt;router-view&gt;&lt;/router-view&gt;<br>  &lt;/el-config-provider&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></figure><p><strong>设置 SCSS 和 CSS 变量</strong><br>创建 styles&#x2F;element&#x2F;index.scss：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-comment">// styles/element/index.scss</span><br><span class="hljs-comment">// we can add this to custom namespace, default is &#x27;el&#x27;</span><br><span class="hljs-keyword">@forward</span> <span class="hljs-string">&#x27;element-plus/theme-chalk/src/mixins/config.scss&#x27;</span> with (<br>  <span class="hljs-variable">$namespace</span>: <span class="hljs-string">&#x27;sk&#x27;</span><br>);<br><br><span class="hljs-keyword">@use</span> <span class="hljs-string">&quot;element-plus/theme-chalk/src/index.scss&quot;</span> as *;<br><span class="hljs-comment">// ...</span><br><br></code></pre></td></tr></table></figure><p>在 vite.config.ts 中导入 styles&#x2F;element&#x2F;index.scss：</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">css</span>: &#123;<br>    <span class="hljs-attr">preprocessorOptions</span>: &#123;<br>      <span class="hljs-attr">scss</span>: &#123;<br>        <span class="hljs-attr">additionalData</span>: <span class="hljs-string">`@use &quot;~/styles/element/index.scss&quot; as *;`</span>,<br>      &#125;,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-comment">// ...</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="子应用-vite-挂载"><a href="#子应用-vite-挂载" class="headerlink" title="子应用 vite 挂载"></a>子应用 vite 挂载</h2><ul><li>挂载子应用路由<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>  <span class="hljs-attr">history</span>: <span class="hljs-title function_">createWebHistory</span>(<span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">BASE_URL</span>),<br>  <span class="hljs-attr">routes</span>: [<br>    ...,<br>    &#123;<br>      <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/mse:*&#x27;</span>,<br>      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;mse&#x27;</span>,<br>      <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/mse/index.vue&#x27;</span>),<br>    &#125;,<br>  ],<br>&#125;);<br><br></code></pre></td></tr></table></figure></li><li>vite子应用组件挂载<br>子应用micro-app 中需要区分 URL与baseroute 关系具体可<a href="https://zeroing.jd.com/micro-app/docs.html#/zh-cn/route">参考官网</a><ul><li>URL 为获取index.html静态资源的加载路由</li><li>baseroute 为下发子应用的区分路由</li></ul></li></ul><h3 id="关闭-disable-sandbox"><a href="#关闭-disable-sandbox" class="headerlink" title="关闭 disable-sandbox"></a>关闭 disable-sandbox</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mse-iframe-container&quot;</span>&gt;</span></span><br><span class="language-xml">  // 加载vite 应用需要关闭沙箱</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">micro-app</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mse&quot;</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;http://localhost:8004&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;&#123;&#125;&quot;</span> <span class="hljs-attr">baseroute</span>=<span class="hljs-string">&quot;/child/vite-vue&quot;</span> <span class="hljs-attr">inline</span> <span class="hljs-attr">disablesandbox</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">micro-app</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">EventCenterForMicroApp</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@micro-zoe/micro-app&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> config, &#123; getAppUrl &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/micro-app/config.ts&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-comment">// @ts-ignore 因为vite子应用关闭了沙箱，我们需要为子应用mse创建EventCenterForMicroApp对象来实现数据通信</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">window</span>.<span class="hljs-property">eventCenterForAppNameVite</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">EventCenterForMicroApp</span>(<span class="hljs-string">&#x27;mse&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.mse-iframe-container</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="Iframe-沙箱模式加载-BETA-1-0-公测支持"><a href="#Iframe-沙箱模式加载-BETA-1-0-公测支持" class="headerlink" title="Iframe 沙箱模式加载(BETA 1.0 公测支持)"></a>Iframe 沙箱模式加载(BETA 1.0 公测支持)</h3><blockquote><p>推荐使用</p></blockquote><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs ts">&lt;template&gt;<br>  <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">micro-app</span> <span class="hljs-attr">:name</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">:url</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;data&quot;</span> <span class="hljs-attr">iframe</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">micro-app</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> config, &#123; getAppUrl &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/micro-app/config.ts&#x27;</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; useMicroData &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/micro-app/micro-data-hooks&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> name = config.<span class="hljs-property">mse</span>.<span class="hljs-property">appName</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> url = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;http://localhost:9001&#x27;</span>)</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> data = <span class="hljs-title function_">reactive</span>(&#123;&#125;)</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><h1 id="vite-子应用"><a href="#vite-子应用" class="headerlink" title="vite 子应用"></a>vite 子应用</h1><blockquote><p>按照正常方式搭建vite 子应用，main.ts &amp;&amp; serve 服务需要改造</p></blockquote><h2 id="关闭-disable-sandbox-模式-子应用的-main-ts-配置"><a href="#关闭-disable-sandbox-模式-子应用的-main-ts-配置" class="headerlink" title="关闭 disable-sandbox 模式 子应用的 main.ts 配置"></a>关闭 disable-sandbox 模式 子应用的 main.ts 配置</h2><h3 id="main-ts-入口文件文件"><a href="#main-ts-入口文件文件" class="headerlink" title="main.ts 入口文件文件"></a>main.ts 入口文件文件</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">handleMicroData</span> () &#123;<br>  <span class="hljs-comment">// eventCenterForAppNameVite 是基座添加到window的数据通信对象</span><br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">eventCenterForAppNameVite</span>) &#123;<br>    <span class="hljs-comment">// 主动获取基座下发的数据</span><br>    <span class="hljs-keyword">const</span> rootData = <span class="hljs-variable language_">window</span>.<span class="hljs-property">eventCenterForAppNameVite</span>.<span class="hljs-title function_">getData</span>()<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rootData)<br>  &#125;<br>&#125;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">use</span>(router);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br><br><span class="hljs-title function_">handleMicroData</span>()<br><span class="hljs-comment">// 监听卸载操作</span><br><span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;unmount&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  app.<span class="hljs-title function_">unmount</span>()<br>  <span class="hljs-comment">// 卸载所有数据监听函数</span><br>  <span class="hljs-variable language_">window</span>.<span class="hljs-property">eventCenterForAppNameVite</span>?.<span class="hljs-title function_">clearDataListener</span>()<br>&#125;)<br><br></code></pre></td></tr></table></figure><h3 id="vite-config-ts-配置"><a href="#vite-config-ts-配置" class="headerlink" title="vite.config.ts 配置"></a>vite.config.ts 配置</h3><ul><li>server 需要支持 跨域请求</li><li>打包时处理<ul><li>指定域名设置</li><li>通过动态basePath插件 vite-plugin-dynamic-base  类似webpack __webpack_public_path__</li></ul></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; fileURLToPath, <span class="hljs-variable constant_">URL</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;node:url&#x27;</span><br><br><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span><br><span class="hljs-keyword">import</span> vueJsx <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue-jsx&#x27;</span><br><span class="hljs-keyword">import</span> &#123; dynamicBase &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite-plugin-dynamic-base&#x27;</span><br><span class="hljs-comment">// https://vitejs.dev/config/</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">base</span>: process.<span class="hljs-property">env</span>.<span class="hljs-property">NODE_ENV</span> === <span class="hljs-string">&quot;production&quot;</span> ? <span class="hljs-string">&quot;__dynamic_base__&quot;</span> : <span class="hljs-string">&quot;/child/vite-vue/&quot;</span>,<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title function_">vue</span>(),<br>    <span class="hljs-title function_">vueJsx</span>(),<br>    <span class="hljs-comment">//打包后 </span><br>    <span class="hljs-title function_">dynamicBase</span>(&#123;<br>      <span class="hljs-attr">publicPath</span>: <span class="hljs-string">&#x27;window.__dynamic_base__&#x27;</span>,<br>      <span class="hljs-attr">transformIndexHtml</span>:  <span class="hljs-literal">true</span><br>    &#125;)<br>  ],<br>  <span class="hljs-attr">server</span>: &#123;<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">8004</span>,<br>    <span class="hljs-attr">headers</span>: &#123;<br>      <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="hljs-string">&#x27;*&#x27;</span>,<br>    &#125;,<br>    <span class="hljs-attr">cors</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">alias</span>: &#123;<br>      <span class="hljs-string">&#x27;@&#x27;</span>: <span class="hljs-title function_">fileURLToPath</span>(<span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(<span class="hljs-string">&#x27;./src&#x27;</span>, <span class="hljs-keyword">import</span>.<span class="hljs-property">meta</span>.<span class="hljs-property">url</span>))<br>    &#125;<br>  &#125;<br>&#125;)<br><br></code></pre></td></tr></table></figure><h3 id="主应用中需要-micro-app-加载时需要plugins-需要插件处理"><a href="#主应用中需要-micro-app-加载时需要plugins-需要插件处理" class="headerlink" title="主应用中需要 micro-app 加载时需要plugins 需要插件处理"></a>主应用中需要 micro-app 加载时需要plugins 需要插件处理</h3><p>参照官网 <a href="https://zeroing.jd.com/micro-app/docs.html#/zh-cn/framework/vite?id=%e4%bd%9c%e4%b8%ba%e5%9f%ba%e5%ba%a7%e5%ba%94%e7%94%a8">vite 基座配置</a></p><h2 id="Iframe-沙盒模式下配置"><a href="#Iframe-沙盒模式下配置" class="headerlink" title="Iframe 沙盒模式下配置"></a>Iframe 沙盒模式下配置</h2><h3 id="main-ts-配置"><a href="#main-ts-配置" class="headerlink" title="main.ts 配置"></a>main.ts 配置</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">// 与基座进行数据交互</span><br><span class="hljs-keyword">function</span> handle<span class="hljs-constructor">MicroData(<span class="hljs-params">router</span>: Router)</span> &#123;<br>  <span class="hljs-comment">// TODO 从全局获取数据，等APP 应用完全号了后规划</span><br>  const rootData = window.microApp.get<span class="hljs-constructor">GlobalData()</span>;<br>  handle<span class="hljs-constructor">RootData(<span class="hljs-params">rootData</span>, <span class="hljs-params">router</span>)</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (is<span class="hljs-constructor">InMicroApp()</span>) &#123;<br>  handle<span class="hljs-constructor">MicroData(<span class="hljs-params">router</span>)</span>;<br>  <span class="hljs-comment">// 卸载应用</span><br>  window.unmount =<span class="hljs-function"> <span class="hljs-params">()</span> =&gt;</span> &#123;<br>    app.unmount<span class="hljs-literal">()</span>;<br>  &#125;;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="vite-config-ts-配置-1"><a href="#vite-config-ts-配置-1" class="headerlink" title="vite-config.ts 配置"></a>vite-config.ts 配置</h3><p>  <a href="https://micro-zoe.com/docs/1.x/#/zh-cn/framework/vite?id=%e4%bd%9c%e4%b8%ba%e5%ad%90%e5%ba%94%e7%94%a8">参考官网</a></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p><a href="https://zeroing.jd.com/micro-app/docs.html#/zh-cn/deploy">参考官网配置</a></p><h1 id="问题-解决方案"><a href="#问题-解决方案" class="headerlink" title="问题&amp;&amp;解决方案"></a>问题&amp;&amp;解决方案</h1><h2 id="0-8-1-版本中部署后无法加载vite-子应用"><a href="#0-8-1-版本中部署后无法加载vite-子应用" class="headerlink" title="0.8.1 版本中部署后无法加载vite 子应用"></a>0.8.1 版本中部署后无法加载vite 子应用</h2><ul><li><p>检查 window.__dynamic_base__ 是否初始化成功</p><blockquote><p>可以在index.html 页面用立即执行函数来初始化 __dynamic_base__ 变量</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  (<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-variable language_">window</span>.<span class="hljs-property">__dynamic_base__</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">rawWindow__dynamic_base__</span> </span><br><span class="language-javascript">  &#125;)()</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>检查基座是否开启vite 子应用的预加载</p><blockquote><p>基座应用加载 vite-vue 子应用时使用了预加载模式，预加载时，子应用的index.html 引用的js 文件&amp;&amp; css 文件地址会直接设置未相对地址，基座中关闭vite 子应用的预加载即可</p></blockquote></li></ul><h2 id="父子资源样式相互污染"><a href="#父子资源样式相互污染" class="headerlink" title="父子资源样式相互污染"></a>父子资源样式相互污染</h2><ul><li>如果基座样式库使用 elment-plus(2.2.0版本及以上) 可以通过自定义命名空间规避污染</li><li>开启沙盒模式进行样式隔离</li></ul><h2 id="iframe-沙箱下-vite-子应用的接口请求总是-cors-error"><a href="#iframe-沙箱下-vite-子应用的接口请求总是-cors-error" class="headerlink" title="iframe 沙箱下 vite 子应用的接口请求总是 cors-error"></a>iframe 沙箱下 vite 子应用的接口请求总是 cors-error</h2><p><img src="/img/micro-app/cors-error.png"></p><p>原因可能在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials">MDN COROS policy</a></p><ol><li>vite 子应用 axios withCredentials 设置为false</li><li>baseUrl 建议设置和父级同层的URL</li></ol><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> basepath = <span class="hljs-string">&#x27;/xxxx&#x27;</span><br><span class="hljs-keyword">const</span> http = axios.<span class="hljs-title function_">create</span>(&#123;<br>  <span class="hljs-attr">baseURL</span>: <span class="hljs-variable language_">window</span>.<span class="hljs-property">__MICRO_APP_ENVIRONMENT__</span> ? <span class="hljs-variable language_">window</span>.<span class="hljs-property">location</span>.<span class="hljs-property">origin</span> + basepath :  basepath,<br>  <span class="hljs-attr">withCredentials</span>: !<span class="hljs-variable language_">window</span>.<span class="hljs-property">__MICRO_APP_ENVIRONMENT__</span>,<br>&#125;)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
